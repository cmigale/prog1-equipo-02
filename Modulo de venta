import random

stock = []

def añadirProducto(x, y, w):
    z = random.randint(100000, 999999)
    repetido = 1
    while repetido:
        repetido = 0
        for producto in stock:
            if producto["codigo"] == z:
                repetido = 1
                z = random.randint(100000, 999999)
    producto = {"codigo": z, "producto": x, "cantidad en stock": y, "Precio Unitario": w}
    stock.append(producto)
    print("¡", x, "añadido al stock con éxito!")

# Buscar Producto
def buscar_producto(entrada):
    entrada = str(entrada).lower()
    for producto in stock:
        if str(producto["codigo"]) == entrada or producto["producto"].lower() == entrada:
            return producto
    return None

def nueva_venta():
    venta = []
    continuar_venta = "1"

    while continuar_venta != "3":
        print("\nMenu de venta:")
        print("1. Agregar producto")
        print("2. Eliminar producto")
        print("3. Finalizar venta")

        continuar_venta = input("Seleccione una opción: ")

        if continuar_venta == "1":
            print("\n------ Stock Disponible ------")
            for p in stock:
                print(f"Codigo:{p['codigo']}-{p['producto']} "
                      f"(stock:{p['cantidad en stock']}, precio:${p['Precio Unitario']})")
            entrada = input("Ingrese el código o nombre del producto: ")
            producto = buscar_producto(entrada)

            if producto:
                if not any(p["codigo"] == producto["codigo"] for p in venta):
                    try:
                        cantidad = int(input("Cantidad: "))
                        if cantidad > 0:
                            if cantidad <= producto["cantidad en stock"]:
                                # Actualizar stock
                                producto["cantidad en stock"] -= cantidad

                                # Agregar a la venta
                                subtotal = cantidad * producto["Precio Unitario"]
                                venta.append({
                                    "codigo": producto["codigo"],
                                    "producto": producto["producto"],
                                    "cantidad": cantidad,
                                    "precio": producto["Precio Unitario"],
                                    "subtotal": subtotal
                                })
                                print(f"{producto['producto']} agregado con subtotal ${subtotal}")
                            else:
                                print("Error: no hay stock suficiente.")
                        else:
                            print("La cantidad debe ser mayor a 0.")
                    except ValueError:
                        print("Error: debe ingresar un número entero válido.")
                else:
                    print("Error: este producto ya está en la venta.")
            else:
                print("Error: producto no encontrado.")

        elif continuar_venta == "2":
            if not venta:
                print("No hay productos para eliminar.")
            else:
                print("\nLista de productos en la venta:")
                for i, p in enumerate(venta, start=1):
                    print(i, "-", p["producto"], "x", p["cantidad"], "=", p["subtotal"])
                try:
                    eliminar = int(input("Número de producto a eliminar: "))
                    if 1 <= eliminar <= len(venta):
                        borrado = venta.pop(eliminar - 1)

                        # Actualizar stock
                        for prod in stock:
                            if prod["codigo"] == borrado["codigo"]:
                                prod["cantidad en stock"] += borrado["cantidad"]
                                prod = None
                        print(f"{borrado['producto']} eliminado y stock restaurado.")
                    else:
                        print("Opción inválida.")
                except ValueError:
                    print("Opción inválida.")

        elif continuar_venta == "3":
            print("\nResumen de la venta:")
            total = sum(p["subtotal"] for p in venta)
            for p in venta:
                print(f"{p['codigo']}-{p['producto']}x{p['cantidad']}=${p['subtotal']}")

            # Métodos de pago
            print("\nMétodos de pago:")
            print("1. Efectivo")
            print("2. Billetera virtual")
            print("3. Tarjeta de crédito")
            print("4. Débito")

            opcion = input("Seleccione método (1-4): ")

            totalFinal = total  # valor base

            if opcion == "1":  # efectivo
                descuento = total * 0.10
                totalFinal = total - descuento
                print("Descuento aplicado por efectivo (10%): -$", descuento)

            elif opcion == "2":  # billetera virtual
                descuento = total * 0.10
                totalFinal = total - descuento
                print("Descuento aplicado por billetera virtual (10%): -$", descuento)

            elif opcion == "3":  # tarjeta de crédito
                cuotasTipos = input("¿En cuántas cuotas? (3, 6 o 12): ")
                if cuotasTipos.isdigit():
                    cuotas = int(cuotasTipos)
                    if cuotas == 3:
                        interes = 0.03
                    elif cuotas == 6:
                        interes = 0.05
                    elif cuotas == 12:
                        interes = 0.08

                    recargo = total * interes
                    totalFinal = total + recargo
                    if interes > 0:
                        print(f"Recargo aplicado por crédito en {cuotas} cuotas ({int(interes * 100)}%): +${recargo:.2f}")
                        print("Pago en", cuotas, "cuotas de $", round(totalFinal / cuotas, 2))

            elif opcion == "4":  # débito
                print("Pago con débito")

            else:
                print("Opción inválida")

            print("Total a pagar: $", round(totalFinal, 2))

            # Ingreso de monto y vuelto
            montoIngresado = input("Monto entregado por el cliente: $")
            if montoIngresado.isdigit():
                monto = int(montoIngresado)
                if monto < totalFinal:
                    print("Monto insuficiente. Faltan: $", round(totalFinal - monto, 2))
                    vuelto = 0
                else:
                    vuelto = monto - totalFinal
                    print("Vuelto: $", round(vuelto, 2))
            else:
                print("Error: monto no válido")
                vuelto = 0

"""
PROGRAMA PRINCIPAL
===============================
"""
accion = ""

while accion != "salir":
    accion = input("\nEscriba 'nueva' para iniciar una venta o 'salir' para terminar: ").lower()
    if accion == "nueva":
        nueva_venta()
    elif accion == "salir":
        print("Programa finalizado")
    else:
        print("Comando no reconocido")
